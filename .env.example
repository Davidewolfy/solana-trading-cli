# Solana Trading CLI - Environment Configuration
# Copy this file to .env and configure your settings

# =============================================================================
# RPC Configuration
# =============================================================================

# Primary Solana RPC endpoint (required)
RPC_URL=https://api.mainnet-beta.solana.com

# Alternative RPC endpoints for failover
RPC_URL_BACKUP=https://solana-api.projectserum.com
DEVNET_RPC_URL=https://api.devnet.solana.com

# Custom RPC with authentication (if needed)
# RPC_URL=https://your-custom-rpc.com
# RPC_AUTH_TOKEN=your_auth_token

# =============================================================================
# Yellowstone gRPC Streaming Configuration
# =============================================================================

# Yellowstone gRPC endpoint for streaming (required for streaming features)
YELLOWSTONE_ENDPOINT=grpc.triton.one:443

# Authentication token for Yellowstone (if required by provider)
# YELLOWSTONE_TOKEN=your_yellowstone_token

# Alternative Yellowstone endpoints
# YELLOWSTONE_ENDPOINT_BACKUP=grpc.rpcfast.com:443
# YELLOWSTONE_ENDPOINT_HELIUS=grpc.helius-rpc.com:443

# =============================================================================
# DEX API Configuration
# =============================================================================

# Jupiter API endpoint
JUPITER_API_URL=https://quote-api.jup.ag/v6

# Raydium API (if using direct API)
# RAYDIUM_API_URL=https://api.raydium.io

# Orca API (if using direct API)
# ORCA_API_URL=https://api.orca.so

# =============================================================================
# Wallet Configuration
# =============================================================================

# Path to wallet keypair file (required for trading)
WALLET_PATH=./secrets/wallet.json

# Alternative wallet for different environments
# DEVNET_WALLET_PATH=./secrets/devnet-wallet.json
# TESTNET_WALLET_PATH=./secrets/testnet-wallet.json

# =============================================================================
# Execution Configuration
# =============================================================================

# Path to Rust executor binary
EXECUTOR_PATH=./exec-rs/target/release/exec-rs

# Default execution mode (simple, jito, bloxroute)
DEFAULT_EXECUTION_MODE=simple

# Default slippage in basis points (50 = 0.5%)
DEFAULT_SLIPPAGE_BPS=50

# =============================================================================
# Performance Tuning
# =============================================================================

# Maximum number of parallel quotes to fetch
MAX_PARALLEL_QUOTES=4

# Quote timeout in milliseconds
QUOTE_TIMEOUT_MS=10000

# Trade execution timeout in milliseconds
TRADE_TIMEOUT_MS=60000

# Maximum retry attempts for failed operations
MAX_RETRY_ATTEMPTS=3

# =============================================================================
# Safety Limits
# =============================================================================

# Maximum trade amount in lamports (1 SOL = 1,000,000,000 lamports)
MAX_TRADE_AMOUNT=1000000000

# Maximum allowed slippage in basis points (1000 = 10%)
MAX_SLIPPAGE_BPS=1000

# Require dry run for all trades (safety feature)
REQUIRE_DRY_RUN=false

# Minimum liquidity threshold for pool detection (lamports)
MIN_LIQUIDITY_THRESHOLD=1000000

# =============================================================================
# Monitoring and Alerting
# =============================================================================

# Slack webhook for notifications
# SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord webhook for notifications
# DISCORD_WEBHOOK=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# Email configuration for alerts
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level (error, warn, info, debug, trace)
LOG_LEVEL=info

# Log format (json, pretty)
LOG_FORMAT=pretty

# Log file path
LOG_FILE=./logs/trading.log

# Enable request/response logging
LOG_REQUESTS=false

# =============================================================================
# Development Configuration
# =============================================================================

# Enable development mode (more verbose logging, relaxed validation)
DEV_MODE=false

# Enable debug features
DEBUG=false

# Mock mode (use fake data instead of real APIs)
MOCK_MODE=false

# =============================================================================
# Kestra Configuration
# =============================================================================

# Kestra server URL
KESTRA_URL=http://localhost:8080

# Kestra authentication (if enabled)
# KESTRA_USERNAME=admin
# KESTRA_PASSWORD=admin

# =============================================================================
# Database Configuration (if using local storage)
# =============================================================================

# PostgreSQL connection for Kestra
POSTGRES_URL=postgresql://kestra:kestra_password@localhost:5432/kestra

# Redis connection for caching
REDIS_URL=redis://localhost:6379

# =============================================================================
# Advanced Configuration
# =============================================================================

# Custom compute unit price in microlamports
# CUSTOM_COMPUTE_UNIT_PRICE=1000

# Custom compute unit limit
# CUSTOM_COMPUTE_UNIT_LIMIT=200000

# Enable priority fee estimation
ENABLE_PRIORITY_FEE_ESTIMATION=true

# Network congestion threshold for dynamic fees
CONGESTION_THRESHOLD=0.8

# =============================================================================
# Security Configuration
# =============================================================================

# Enable HTTPS only
HTTPS_ONLY=true

# API rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# Request timeout in seconds
REQUEST_TIMEOUT=30

# =============================================================================
# Feature Flags
# =============================================================================

# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Enable multi-DEX routing
ENABLE_MULTI_DEX_ROUTING=true

# Enable streaming features
ENABLE_STREAMING=true

# Enable advanced scoring
ENABLE_ADVANCED_SCORING=true

# Enable automatic failover
ENABLE_FAILOVER=true
