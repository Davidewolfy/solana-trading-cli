name: Dependency Updates

on:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM
  workflow_dispatch:

jobs:
  update-node-dependencies:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.2.0'
        cache: 'npm'
        
    - name: Update dependencies
      run: |
        # Update package.json dependencies
        npx npm-check-updates -u
        
        # Install updated dependencies
        npm install
        
        # Run tests to ensure compatibility
        npm test || echo "Tests failed - manual review needed"
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(deps): update Node.js dependencies'
        title: 'üîÑ Update Node.js Dependencies'
        body: |
          ## üì¶ Dependency Updates
          
          This PR updates Node.js dependencies to their latest versions.
          
          ### Changes
          - Updated package.json dependencies
          - Ran tests to verify compatibility
          
          ### Review Checklist
          - [ ] All tests pass
          - [ ] No breaking changes introduced
          - [ ] Security vulnerabilities addressed
          - [ ] Performance impact acceptable
          
          **Note**: This PR was automatically generated by the dependency update workflow.
        branch: chore/update-node-dependencies
        delete-branch: true
        labels: |
          dependencies
          automated
          chore

  update-rust-dependencies:
    name: Update Rust Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install cargo-edit
      run: cargo install cargo-edit
      
    - name: Update Rust dependencies
      run: |
        cd exec-rs
        
        # Update Cargo.toml dependencies
        cargo upgrade
        
        # Update Cargo.lock
        cargo update
        
        # Run tests to ensure compatibility
        cargo test || echo "Tests failed - manual review needed"
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(deps): update Rust dependencies'
        title: 'ü¶Ä Update Rust Dependencies'
        body: |
          ## üì¶ Rust Dependency Updates
          
          This PR updates Rust dependencies to their latest versions.
          
          ### Changes
          - Updated Cargo.toml dependencies
          - Updated Cargo.lock
          - Ran tests to verify compatibility
          
          ### Review Checklist
          - [ ] All tests pass
          - [ ] No breaking changes introduced
          - [ ] Security vulnerabilities addressed
          - [ ] Performance impact acceptable
          
          **Note**: This PR was automatically generated by the dependency update workflow.
        branch: chore/update-rust-dependencies
        delete-branch: true
        labels: |
          dependencies
          automated
          chore
          rust

  update-docker-images:
    name: Update Docker Base Images
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update Docker images
      run: |
        # Update Node.js base image
        LATEST_NODE=$(curl -s https://api.github.com/repos/nodejs/node/releases/latest | jq -r '.tag_name' | sed 's/v//')
        sed -i "s/node:[0-9]\+\.[0-9]\+\.[0-9]\+/node:$LATEST_NODE/g" Dockerfile
        
        # Update Rust base image
        LATEST_RUST=$(curl -s https://forge.rust-lang.org/channel-layout.html | grep -o 'rust:[0-9]\+\.[0-9]\+' | head -1)
        sed -i "s/rust:[0-9]\+\.[0-9]\+/$LATEST_RUST/g" Dockerfile
        
        # Update other base images in docker-compose files
        sed -i 's/postgres:[0-9]\+/postgres:15/g' docker-compose*.yml
        sed -i 's/redis:[0-9]\+-alpine/redis:7-alpine/g' docker-compose*.yml
        
    - name: Test Docker build
      run: |
        docker build -t solana-trading-cli:test .
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(docker): update base images'
        title: 'üê≥ Update Docker Base Images'
        body: |
          ## üê≥ Docker Image Updates
          
          This PR updates Docker base images to their latest versions.
          
          ### Changes
          - Updated Node.js base image
          - Updated Rust base image
          - Updated PostgreSQL image
          - Updated Redis image
          
          ### Review Checklist
          - [ ] Docker build succeeds
          - [ ] All services start correctly
          - [ ] No breaking changes introduced
          - [ ] Security vulnerabilities addressed
          
          **Note**: This PR was automatically generated by the dependency update workflow.
        branch: chore/update-docker-images
        delete-branch: true
        labels: |
          dependencies
          automated
          docker
          chore

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.2.0'
        cache: 'npm'
        
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate > npm-audit-report.txt || true
        
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run Rust security audit
      run: |
        cd exec-rs
        cargo audit > ../rust-audit-report.txt || true
        
    - name: Check for vulnerabilities
      run: |
        echo "## üîí Security Audit Report" > security-summary.md
        echo "" >> security-summary.md
        
        echo "### Node.js Dependencies" >> security-summary.md
        if grep -q "found 0 vulnerabilities" npm-audit-report.txt; then
          echo "‚úÖ No vulnerabilities found in Node.js dependencies" >> security-summary.md
        else
          echo "‚ö†Ô∏è Vulnerabilities found in Node.js dependencies:" >> security-summary.md
          echo '```' >> security-summary.md
          cat npm-audit-report.txt >> security-summary.md
          echo '```' >> security-summary.md
        fi
        
        echo "" >> security-summary.md
        echo "### Rust Dependencies" >> security-summary.md
        if grep -q "Crate:     Vulnerable versions:" rust-audit-report.txt; then
          echo "‚ö†Ô∏è Vulnerabilities found in Rust dependencies:" >> security-summary.md
          echo '```' >> security-summary.md
          cat rust-audit-report.txt >> security-summary.md
          echo '```' >> security-summary.md
        else
          echo "‚úÖ No vulnerabilities found in Rust dependencies" >> security-summary.md
        fi
        
    - name: Create security issue if vulnerabilities found
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('security-summary.md', 'utf8');
          
          if (summary.includes('‚ö†Ô∏è')) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üîí Security Vulnerabilities Detected',
              body: summary + '\n\n**Action Required**: Please review and update vulnerable dependencies.',
              labels: ['security', 'high-priority', 'automated']
            });
          }

  cleanup-old-prs:
    name: Cleanup Old Dependency PRs
    runs-on: ubuntu-latest
    
    steps:
    - name: Cleanup old dependency PRs
      uses: actions/github-script@v6
      with:
        script: |
          const { data: pulls } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            head: 'chore/update-node-dependencies'
          });
          
          // Close PRs older than 7 days
          const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
          
          for (const pr of pulls) {
            if (new Date(pr.created_at) < weekAgo) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                state: 'closed'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: 'Automatically closed due to age. A new dependency update PR will be created.'
              });
            }
          }
